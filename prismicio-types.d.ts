// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

/**
 * Item in *Product → Images*
 */
export interface ProductDocumentDataImagesItem {
  /**
   * image field in *Product → Images*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: product.images[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;
}

/**
 * Item in *Product → Related products*
 */
export interface ProductDocumentDataRelatedProductsItem {
  /**
   * Related product field in *Product → Related products*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: product.related_products[].related_product
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  related_product: ContentRelationshipFieldWithData<
    [{ id: "product"; fields: ["title"] }]
  >;

  /**
   * Call to action field in *Product → Related products*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Example, "Goes great with", "To wear with your shirt"
   * - **API ID Path**: product.related_products[].call_to_action
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  call_to_action: prismic.KeyTextField;
}

type ProductDocumentDataSlicesSlice = never;

/**
 * Item in *Product → Variants*
 */
export interface ProductDocumentDataVariantsItem {
  /**
   * Variant value field in *Product → Variants*
   *
   * - **Field Type**: Select
   * - **Placeholder**: What is the variants value
   * - **API ID Path**: product.variants[].variant_value
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  variant_value: prismic.SelectField<
    "XS" | "S" | "M" | "L" | "XL" | "XXL" | "Black" | "White"
  >;

  /**
   * Variant type field in *Product → Variants*
   *
   * - **Field Type**: Select
   * - **Placeholder**: What type of a variant is it
   * - **Default Value**: Size
   * - **API ID Path**: product.variants[].variant_type
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  variant_type: prismic.SelectField<"Size" | "Colour", "filled">;
}

/**
 * Item in *Product → Regional eligibility *
 */
export interface ProductDocumentDataRegionalEligibilityItem {
  /**
   * Region field in *Product → Regional eligibility *
   *
   * - **Field Type**: Select
   * - **Placeholder**: Region of availability
   * - **API ID Path**: product.regional_eligibility[].region
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  region: prismic.SelectField<
    "Slovenia" | "EU" | "UK" | "USA" | "Serbia" | "Bosnia"
  >;

  /**
   * Quantity limit field in *Product → Regional eligibility *
   *
   * - **Field Type**: Number
   * - **Placeholder**: Optional - Limit of quantity per sale
   * - **API ID Path**: product.regional_eligibility[].quantity_limit
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  quantity_limit: prismic.NumberField;
}

type ProductDocumentDataSlices2Slice = never;

/**
 * Content for Product documents
 */
interface ProductDocumentData {
  /**
   * Title field in *Product*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Name of the product
   * - **API ID Path**: product.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Product*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Descriptive text to highlight the features of the product
   * - **API ID Path**: product.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Images field in *Product*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: product.images[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  images: prismic.GroupField<Simplify<ProductDocumentDataImagesItem>>;

  /**
   * Related products field in *Product*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: product.related_products[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  related_products: prismic.GroupField<
    Simplify<ProductDocumentDataRelatedProductsItem>
  >;

  /**
   * Special notice field in *Product*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Optional - Special notice or disclaimer goes here
   * - **API ID Path**: product.special_notice
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  special_notice: prismic.KeyTextField;

  /**
   * Slice Zone field in *Product*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: product.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<ProductDocumentDataSlicesSlice> /**
   * Meta Title field in *Product*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: product.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Product*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: product.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Product*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: product.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never> /**
   * Product type field in *Product*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Is this a physical or digital item
   * - **Default Value**: Physical
   * - **API ID Path**: product.product_type
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/select
   */;
  product_type: prismic.SelectField<"Physical" | "Digital", "filled">;

  /**
   * Product category field in *Product*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Which category best describes the product
   * - **Default Value**: Merch
   * - **API ID Path**: product.product_category
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  product_category: prismic.SelectField<
    | "Merch"
    | "Music"
    | "Album"
    | "Item"
    | "Donation"
    | "Ticket"
    | "License"
    | "Currency"
    | "Other",
    "filled"
  >;

  /**
   * Product status field in *Product*
   *
   * - **Field Type**: Select
   * - **Placeholder**: What is the current product status
   * - **Default Value**: Available
   * - **API ID Path**: product.product_status
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  product_status: prismic.SelectField<
    "Available" | "Preorder" | "Coming soon" | "Out of stock" | "Sold out",
    "filled"
  >;

  /**
   * Product visibility field in *Product*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Is the product visible on site?
   * - **Default Value**: Visible
   * - **API ID Path**: product.product_visibility
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  product_visibility: prismic.SelectField<"Visible" | "Hidden", "filled">;

  /**
   * Price field in *Product*
   *
   * - **Field Type**: Number
   * - **Placeholder**: Price of the product in EUR
   * - **API ID Path**: product.price
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  price: prismic.NumberField;

  /**
   * Weight (g) field in *Product*
   *
   * - **Field Type**: Number
   * - **Placeholder**: Weight of the product in grams
   * - **API ID Path**: product.weight
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  weight: prismic.NumberField;

  /**
   * Variants field in *Product*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: product.variants[]
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  variants: prismic.GroupField<Simplify<ProductDocumentDataVariantsItem>>;

  /**
   * Regional eligibility  field in *Product*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: product.regional_eligibility[]
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  regional_eligibility: prismic.GroupField<
    Simplify<ProductDocumentDataRegionalEligibilityItem>
  >;

  /**
   * Slice Zone field in *Product*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: product.slices2[]
   * - **Tab**: Product attributes
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices2: prismic.SliceZone<ProductDocumentDataSlices2Slice>;
}

/**
 * Product document from Prismic
 *
 * - **API ID**: `product`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProductDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ProductDocumentData>,
    "product",
    Lang
  >;

export type AllDocumentTypes = ProductDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      ProductDocument,
      ProductDocumentData,
      ProductDocumentDataImagesItem,
      ProductDocumentDataRelatedProductsItem,
      ProductDocumentDataSlicesSlice,
      ProductDocumentDataVariantsItem,
      ProductDocumentDataRegionalEligibilityItem,
      ProductDocumentDataSlices2Slice,
      AllDocumentTypes,
    };
  }
}
